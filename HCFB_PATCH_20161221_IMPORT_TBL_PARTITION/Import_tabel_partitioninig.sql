
 
 -- cоздаем таблицу с партициями --
  CREATE TABLE MA_CMDM.CUSTOMER_IMPORTED_TEST
   (	"CUID" NUMBER(22,0), 
	"IMPORT_TYPE" CHAR(3 BYTE), 
	"IMPORT_NAME" VARCHAR2(255 BYTE), 
	"IMPORT_DATE" DATE, 
	"NUM_PARAM1" NUMBER, 
	"NUM_PARAM2" NUMBER, 
	"NUM_PARAM3" NUMBER, 
	"NUM_PARAM4" NUMBER, 
	"NUM_PARAM5" NUMBER, 
	"NUM_PARAM6" NUMBER, 
	"NUM_PARAM7" NUMBER, 
	"NUM_PARAM8" NUMBER, 
	"NUM_PARAM9" NUMBER, 
	"NUM_PARAM10" NUMBER, 
	"CHAR_PARAM1" VARCHAR2(100 BYTE), 
	"CHAR_PARAM2" VARCHAR2(100 BYTE), 
	"CHAR_PARAM3" VARCHAR2(100 BYTE), 
	"CHAR_PARAM4" VARCHAR2(100 BYTE), 
	"CHAR_PARAM5" VARCHAR2(100 BYTE), 
	"CHAR_PARAM6" VARCHAR2(100 BYTE), 
	"CHAR_PARAM7" VARCHAR2(100 BYTE), 
	"CHAR_PARAM8" VARCHAR2(100 BYTE), 
	"CHAR_PARAM9" VARCHAR2(100 BYTE), 
	"CHAR_PARAM10" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
  PARALLEL 8 
  partition by list (IMPORT_NAME) 
  ( PARTITION p_default VALUES (NULL)
  );
--создаем сиквенс, который используется для названия партиций -- 
create sequence import_partition_name
start with 1
INCREMENT by 1
NOCYCLE;
select import_partition_name.NEXTVAL from dual;  
 --добавляем в таблицу партиции по значениям имени импорта-- 
begin 
  for x in (select distinct import_name from MA_CMDM.customer_imported)
  loop
    EXECUTE IMMEDIATE 
    'alter table CUSTOMER_IMPORTED_TEST add partition P_' ||import_partition_name.NEXTVAL || ' values('||q'<'>'||x.import_name || q'<'>' ||')' ;
    end loop;
end;
/
--копируем данные из исходной таблицы в секционированную--

  insert /*+append*/ into "CUSTOMER_IMPORTED_TEST" select * from "MA_CMDM"."CUSTOMER_IMPORTED";
commit;

---вернуть индексы и констраинты
--  DDL for Index 
--------------------------------------------------------
  create index CUSTOMER_IMPORTED_T_PK on "MA_CMDM"."CUSTOMER_IMPORTED_TEST" ("IMPORT_NAME","CUID") LOCAL
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for CONSTRAINTS
--------------------------------------------------------
  ALTER TABLE "MA_CMDM"."CUSTOMER_IMPORTED_TEST" ADD CONSTRAINT "CUSTOMER_IMPORTED_T_CHK1" CHECK (import_type in ('SAS', 'XLS', 'TXT', 'CSV')) ENABLE;
  ALTER TABLE "MA_CMDM"."CUSTOMER_IMPORTED_TEST" MODIFY ("IMPORT_DATE" NOT NULL ENABLE);
  ALTER TABLE "MA_CMDM"."CUSTOMER_IMPORTED_TEST" MODIFY ("IMPORT_NAME" NOT NULL ENABLE);
  ALTER TABLE "MA_CMDM"."CUSTOMER_IMPORTED_TEST" MODIFY ("IMPORT_TYPE" NOT NULL ENABLE);
  ALTER TABLE "MA_CMDM"."CUSTOMER_IMPORTED_TEST" MODIFY ("CUID" NOT NULL ENABLE);
 
 
RENAME  customer_imported TO CUSTOMER_IMPORTED_BKP;
RENAME  customer_imported_test TO CUSTOMER_IMPORTED;

--песобрать статистику 
exec dbms_stats.unlock_table_stats('MA_CMDM','customer_imported');
EXEC DBMS_STATS.GATHER_TABLE_STATS('MA_CMDM','customer_imported');



